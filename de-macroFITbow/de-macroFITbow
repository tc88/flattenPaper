#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# de-macrofies the FIT-related bow commands (\bow,\bbow,\bbbow,\widebow,\widebbow and \widebbbow) in a .tex file.
#
# usage: - de-macroFITbow example.tex
#        - de-macroFITbow example
#
# author: Thorben Casper
# created on: 2018/08/15

import os
import argparse
import fnmatch

print("de-macrofies FIT-related bow commands ...")

# parse input arguments
parser = argparse.ArgumentParser()
parser.add_argument("tex_file", help="the .tex-file that shall be modified")
parser_args = parser.parse_args()
filename = os.path.splitext(os.path.basename(parser_args.tex_file))[0] # .tex filename without path and extension

# parses the .tex file to insert definition of bow commands
f = open(filename+'.tex','r')
line2insert = 0
foundTEMFfinite = False
texContent = []
for num, line in enumerate(f,1):
    texContent.append(line)
    if '\\begin{document}' in line:
        line2insert = num 
    if 'temf-finite' in line:
        foundTEMFfinite = True
f.close()

# if temf-finite style file is not used, there is nothing to do
if not foundTEMFfinite:
    exit()

# find temf-finite style file recursively in current directory
try:
    styFile = os.popen("find . -name 'temf-finite*.sty' -printf '%p'").readlines()[0]
except:
    print('error: no style file for temf-finite found in current directory or its sub-directories')
    exit()

# parses the temf-finite style file to extract definition of bow commands
f = open(styFile,'r')
insideBowDef = False
bowDefinition = []
styContent = []
for num, line in enumerate(f,1):
    if 'FIT bow notation' in line:
        insideBowDef = True
    if not line.strip():
        insideBowDef = False
    if insideBowDef:
        bowDefinition.append(line)
    else:
        styContent.append(line)
f.close()
styContent = "".join(styContent)
bowDefinition = "".join(bowDefinition)

# insert bow definition to tex contents and convert list to string
texContent.insert(line2insert-1,bowDefinition)
texContent.insert(line2insert,'\n')
texContent = "".join(texContent)

# write modified tex file
f = open(filename+'.tex','w')
f.write(texContent)
f.close()

# write modified sty file
f = open(styFile,'w')
f.write(styContent)
f.close()

print("finished de-macrofying bow commands.")
